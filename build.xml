<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="terracotta-newrelic-plugin" default="dist"
	basedir=".">
	<property file="build.properties" />
	<property name="version" value="1.0.6" />
	<property name="filename" value="${ant.project.name}-${version}" />
	<property name="jarfile" value="${filename}.jar" />
	<property name="tarfile" value="${filename}-bin.tar.gz" />

	<property name="build.dir" value="build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.jar.dir" value="${build.dir}/jar" />
	<property name="build.tar.dir" value="${build.dir}/tar" />
	<property name="build.tar.src.dir" value="${build.tar.dir}/${filename}-bin" />
	<property name="build.dist.dir" location="${build.dir}/dist" />

	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="scripts.dir" value="scripts" />
	<property name="conf.dir" value="config" />
	<property name="dist.dir" location="distributions" />

	<property name="ant.build.javac.source" value="1.6" />
	<property name="ant.build.javac.target" value="1.6" />

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${terracotta.home}/lib">
		    <include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<echo>Cleaning project...</echo>
		<delete dir="${build.dir}" />
		<echo>Done.</echo>
	</target>

	<target name="init" depends="clean">
		<echo>Creating directory: ${build.dir}</echo>
		<mkdir dir="${build.dir}" />
	</target>

	<target name="compile" depends="init">
		<!-- Compile the java code -->
		<echo>Building project...</echo>
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}">
			<classpath refid="classpath" />
		</javac>
		<echo>Done.</echo>
	</target>

	<target name="jar" depends="compile"
		description="create a Jar file for the application">
		<mkdir dir="${build.jar.dir}" />
		<tstamp />
		<jar destfile="${build.jar.dir}/${jarfile}">
			<manifest>
				<attribute name="Specification-Title" value="Platform Terracotta" />
				<attribute name="Specification-Vendor" value="Terracotta, Inc" />
				<attribute name="Implementation-Vendor" value="Terracotta, Inc" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Implementation-Version" value="${version} ${TODAY}" />
				<attribute name="Main-Class"
					value="com.newrelic.plugins.terracotta.TCL2MonLauncher" />
			</manifest>
			<fileset dir="${build.classes.dir}" />
		</jar>
	</target>

	<target name="dist" description="create a downloadable file">
		<antcall target="dist_internal">
			<param name="dev-build" value="false" />
		</antcall>
	</target>

	<target name="dist-dev" description="create a downloadable file">
		<antcall target="dist_internal">
			<param name="dev-build" value="true" />
		</antcall>
	</target>

	<target name="package-config_templates" description="package config template files" unless="${dev-build}">
		<move todir="${build.tar.src.dir}/config" includeemptydirs="false">
			<fileset dir="${build.tar.src.dir}/config">
				<include name="template-*" />
			</fileset>
			<mapper type="glob" from="template-*" to="*" />
		</move>
	</target>

	<target name="package-config-dev" description="package config files"
		if="${dev-build}">
		<move todir="${build.tar.src.dir}/config" includeemptydirs="false">
			<fileset dir="${build.tar.src.dir}/config">
				<exclude name="template-*" />
			</fileset>
		</move>
	</target>

	<target name="dist_internal" depends="jar" description="create a downloadable file">
		<mkdir dir="${build.tar.src.dir}" />
		<copy todir="${build.tar.src.dir}/config">
			<fileset dir="${conf.dir}">
				<exclude name="*.bak" />
			</fileset>
		</copy>

		<antcall target="package-config_templates" />

		<copy todir="${build.tar.src.dir}/bin">
			<fileset dir="${scripts.dir}" />
		</copy>
		<copy todir="${build.tar.src.dir}/libs">
			<fileset dir="${lib.dir}" />
		</copy>
		<copy file="${build.jar.dir}/${jarfile}" todir="${build.tar.src.dir}/libs" />

		<replace
			dir="${build.tar.src.dir}/bin/"
			propertyFile="build.properties">
			<replacefilter token="@terracotta_home@" property="terracotta.home" />
		</replace>

		<tar compression="gzip" destfile="${build.dist.dir}/${tarfile}">
			<tarfileset dir="${build.tar.dir}" />
		</tar>
	</target>

	<target name="deploy" description="push package to a specific location">

		<delete includeemptydirs="true">
			<fileset dir="${plugin.deploy}" includes="**/*" />
		</delete>

		<untar src="${build.dist.dir}/${tarfile}" dest="${plugin.deploy}"
			compression="gzip" />
	</target>

	<target name="archive" description="archive binary package">
		<copy file="${build.dist.dir}/${tarfile}" todir="${dist.dir}" />
	</target>
</project>